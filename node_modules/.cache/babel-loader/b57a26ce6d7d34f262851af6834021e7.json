{"ast":null,"code":"var _jsxFileName = \"/Users/stanmattingly/Desktop/react-dev/tweet2shirt/src/components/Product.js\";\nimport React from 'react';\n\nvar firebase = require(\"firebase/app\");\n\nrequire('firebase/auth');\n\nrequire('firebase/firestore');\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBv8L5c8THfMUb95DPsK0-KJz4lfIvjewo\",\n  authDomain: \"tweet2shirt-4c967.firebaseapp.com\",\n  databaseURL: \"https://tweet2shirt-4c967.firebaseio.com\",\n  projectId: \"tweet2shirt-4c967\",\n  storageBucket: \"tweet2shirt-4c967.appspot.com\",\n  messagingSenderId: \"1042027584400\",\n  appId: \"1:1042027584400:web:c93158799bdf5094563115\",\n  measurementId: \"G-LXR2HCQ969\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nexport class Product extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      product: {}\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    db.collection('products').get().then(response => response.docs[0].data()).then(data => this.setState({\n      product: data\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, this.state.product.name);\n  }\n\n}","map":{"version":3,"sources":["/Users/stanmattingly/Desktop/react-dev/tweet2shirt/src/components/Product.js"],"names":["React","firebase","require","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","db","firestore","Product","Component","constructor","props","state","error","isLoaded","product","componentDidMount","bind","collection","get","then","response","docs","data","setState","render","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAtB;;AACAA,OAAO,CAAC,eAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,mCAFS;AAGrBC,EAAAA,WAAW,EAAE,0CAHQ;AAIrBC,EAAAA,SAAS,EAAE,mBAJU;AAKrBC,EAAAA,aAAa,EAAE,+BALM;AAMrBC,EAAAA,iBAAiB,EAAE,eANE;AAOrBC,EAAAA,KAAK,EAAE,4CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB;AAUAV,QAAQ,CAACW,aAAT,CAAuBT,cAAvB;AAEA,MAAMU,EAAE,GAAGZ,QAAQ,CAACa,SAAT,EAAX;AAEA,OAAO,MAAMC,OAAN,SAAsBf,KAAK,CAACgB,SAA5B,CAAqC;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AACDD,EAAAA,iBAAiB,GAAE;AACfV,IAAAA,EAAE,CAACY,UAAH,CAAc,UAAd,EAA0BC,GAA1B,GACKC,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBC,IAAjB,EADxB,EAEKH,IAFL,CAEWG,IAAD,IAAU,KAAKC,QAAL,CAAc;AAACT,MAAAA,OAAO,EAACQ;AAAT,KAAd,CAFpB;AAGH;;AACDE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKb,KAAL,CAAWG,OAAX,CAAmBW,IAAxB,CADJ;AAGH;;AAnBuC","sourcesContent":["import React from 'react';\n\nvar firebase = require(\"firebase/app\");\nrequire('firebase/auth');\nrequire('firebase/firestore');\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBv8L5c8THfMUb95DPsK0-KJz4lfIvjewo\",\n  authDomain: \"tweet2shirt-4c967.firebaseapp.com\",\n  databaseURL: \"https://tweet2shirt-4c967.firebaseio.com\",\n  projectId: \"tweet2shirt-4c967\",\n  storageBucket: \"tweet2shirt-4c967.appspot.com\",\n  messagingSenderId: \"1042027584400\",\n  appId: \"1:1042027584400:web:c93158799bdf5094563115\",\n  measurementId: \"G-LXR2HCQ969\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nexport class Product extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            product: {}\n        };\n        this.componentDidMount = this.componentDidMount.bind(this);\n    }\n    componentDidMount(){\n        db.collection('products').get()\n            .then((response) => response.docs[0].data())\n            .then((data) => this.setState({product:data}))\n    }\n    render(){\n        return(\n            <h1>{this.state.product.name}</h1>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}